//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 mWorld;                    // Offset:    0, size:   64
    float4x4 mWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 mWVP;                      // Offset:  128, size:   64
    float4x4 mTexTransform;             // Offset:  192, size:   64
    uint    mCornerHeight;              // Offset:  256, size:    4
    float   worldSpaceVoxelSize;        // Offset:  260, size:    4
}

//
// 2 local object(s)
//
Texture3D noiseTex;
SamplerState Point
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
    AddressW = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 MarchingCubes
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mWorld;                   // Offset:    0 Size:    64
                //   float4x4 mWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 mWVP;                     // Offset:  128 Size:    64
                //   float4x4 mTexTransform;            // Offset:  192 Size:    64
                //   uint mCornerHeight;                // Offset:  256 Size:     4
                //   float worldSpaceVoxelSize;         // Offset:  260 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // Point                             sampler      NA          NA    0        1
                // noiseTex                          texture  float4          3d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   x z 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // SV_InstanceID            0   x           2   INSTID    uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 1   x           3     NONE    uint   x   
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[17], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture3d (float,float,float,float) t0
                dcl_input v0.xz
                dcl_input v1.xy
                dcl_input_sgv v2.x, instance_id
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.x
                dcl_temps 7
                //
                // Initial variable locations:
                //   v0.x <- vin.posL.x; v0.y <- vin.posL.y; v0.z <- vin.posL.z; 
                //   v1.x <- vin.uv.x; v1.y <- vin.uv.y; 
                //   v2.x <- instanceID; 
                //   o3.x <- <VS return value>.mcCase; 
                //   o2.x <- <VS return value>.uvw.x; o2.y <- <VS return value>.uvw.y; o2.z <- <VS return value>.uvw.z; 
                //   o1.x <- <VS return value>.posW.x; o1.y <- <VS return value>.posW.y; o1.z <- <VS return value>.posW.z; 
                //   o0.x <- <VS return value>.posH.x; o0.y <- <VS return value>.posH.y; o0.z <- <VS return value>.posH.z; o0.w <- <VS return value>.posH.w
                //
                #line 39 "E:\Desktop\ComplexTerrainTest\Chapter 11 The Geometry Shader\TreeBillboard\FX\marchingCubes.fx"
                utof r0.y, v2.x  // r0.y <- vin.posL.y
                mov r0.xz, v0.xxzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.posW.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.posW.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.posW.z
                dp4 r2.x, r0.xyzw, cb0[8].xyzw  // r2.x <- vout.posH.x
                dp4 r2.y, r0.xyzw, cb0[9].xyzw  // r2.y <- vout.posH.y
                dp4 r2.z, r0.xyzw, cb0[10].xyzw  // r2.z <- vout.posH.z
                dp4 r2.w, r0.xyzw, cb0[11].xyzw  // r2.w <- vout.posH.w
                mov r0.xy, v1.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // r3.x <- uvw.x
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // r3.y <- uvw.y
                utof r0.x, v2.x
                utof r0.y, cb0[16].x
                div r3.z, r0.x, r0.y  // r3.z <- uvw.z
                utof r0.x, cb0[16].x
                div r0.xy, cb0[16].yyyy, r0.xxxx  // r0.y <- step.x
                itof r0.z, l(0)  // r0.z <- step.y
                add r4.xyz, r0.zzzz, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r4.x, r4.xyzx, t0.xyzw, s0, r0.w
                add r5.xyz, r0.zzyz, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r4.y, r5.xyzx, t0.yxzw, s0, r0.w
                add r5.xyz, r0.yzyy, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r4.z, r5.xyzx, t0.yzxw, s0, r0.w
                add r5.xyz, r0.yzzy, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r4.w, r5.xyzx, t0.yzwx, s0, r0.w
                mov r4.x, r4.x  // r4.x <- f0123.x
                mov r4.y, r4.y  // r4.y <- f0123.y
                mov r4.z, r4.z  // r4.z <- f0123.z
                mov r4.w, r4.w  // r4.w <- f0123.w
                
                #line 49
                add r5.xyz, r0.zyzz, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r5.x, r5.xyzx, t0.xyzw, s0, r0.w
                add r6.xyz, r0.zyyz, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r5.y, r6.xyzx, t0.yxzw, s0, r0.w
                add r6.xyz, r0.yyyy, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r5.z, r6.xyzx, t0.yzxw, s0, r0.w
                add r0.xyz, r0.xyzx, r3.xyzx
                itof r0.w, l(0)
                sample_l_indexable(texture3d)(float,float,float,float) r5.w, r0.xyzx, t0.yzwx, s0, r0.w
                mov r5.x, r5.x  // r5.x <- f4567.x
                mov r5.y, r5.y  // r5.y <- f4567.y
                mov r5.z, r5.z  // r5.z <- f4567.z
                mov r5.w, r5.w  // r5.w <- f4567.w
                
                #line 53
                itof r0.xyzw, l(0x0001869f, 0x0001869f, 0x0001869f, 0x0001869f)
                mul r0.xyzw, r0.xyzw, r4.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min r0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                ftou r0.xyzw, r0.xyzw  // r0.x <- n0123.x; r0.y <- n0123.y; r0.z <- n0123.z; r0.w <- n0123.w
                itof r4.xyzw, l(0x0001869f, 0x0001869f, 0x0001869f, 0x0001869f)
                mul r4.xyzw, r4.xyzw, r5.xyzw
                max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                ftou r4.xyzw, r4.xyzw  // r4.x <- n4567.x; r4.y <- n4567.y; r4.z <- n4567.z; r4.w <- n4567.w
                mov r1.w, l(1)
                ishl r0.y, r0.y, r1.w
                iadd r0.x, r0.y, r0.x
                mov r0.y, l(2)
                ishl r0.y, r0.z, r0.y
                iadd r0.x, r0.y, r0.x
                mov r0.y, l(3)
                ishl r0.y, r0.w, r0.y
                iadd r0.x, r0.y, r0.x
                mov r0.y, l(4)
                ishl r0.y, r4.x, r0.y
                iadd r0.x, r0.y, r0.x
                mov r0.y, l(5)
                ishl r0.y, r4.y, r0.y
                iadd r0.x, r0.y, r0.x
                mov r0.y, l(6)
                ishl r0.y, r4.z, r0.y
                iadd r0.x, r0.y, r0.x
                mov r0.y, l(7)
                ishl r0.y, r4.w, r0.y
                iadd r0.x, r0.y, r0.x  // r0.x <- mc_case
                mov r3.xyz, r3.xyzx  // r3.x <- vout.uvw.x; r3.y <- vout.uvw.y; r3.z <- vout.uvw.z
                mov r0.x, r0.x  // r0.x <- vout.mcCase
                mov o0.xyzw, r2.xyzw
                mov o1.xyz, r1.xyzx
                mov o2.xyz, r3.xyzx
                mov o3.x, r0.x
                ret 
                // Approximately 90 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // TEXCOORD                 0   xyz         2     NONE   float       
                // TEXCOORD                 1   x           3     NONE    uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input_ps constant v3.x
                dcl_output o0.xyzw
                //
                // Initial variable locations:
                //   v0.x <- pin.posH.x; v0.y <- pin.posH.y; v0.z <- pin.posH.z; v0.w <- pin.posH.w; 
                //   v1.x <- pin.posW.x; v1.y <- pin.posW.y; v1.z <- pin.posW.z; 
                //   v2.x <- pin.uvw.x; v2.y <- pin.uvw.y; v2.z <- pin.uvw.z; 
                //   v3.x <- pin.mcCase; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 64 "E:\Desktop\ComplexTerrainTest\Chapter 11 The Geometry Shader\TreeBillboard\FX\marchingCubes.fx"
                utof o0.xyzw, v3.xxxx
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

